generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  given_name String
  family_name String
  email String
  platform_id String @unique
  platform Platform
  address String
  role Role[]
  created_at DateTime @default(now())
  avatar String
  orders Order[]
  reviews Review[]
  payments Payment[]
}
// add payment info for users accounts -> any

model Product {
  id Int @id @default(autoincrement())
  name String
  price Int @default(0)
  description Json
  company String
  inventory Int
  shipping_cost Int @default(0)
  discount Int @default(0)
  avg_rating Int @default(0) // ??
  num_of_reviews Int @default(0) // ??
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  images String[]
  category Category @relation(fields: [category_id],references: [id])
  category_id Int
  reviews Review[]
  orders SingleOrderItem[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  parent_id Int?
  parent Category? @relation("subCategory",fields: [parent_id],references: [id])
  child Category[] @relation("subCategory")
  products Product[]
}

model Review {
  id Int @id @default(autoincrement())
  title String
  rating Int
  comment String
  user User @relation(fields: [user_id],references: [id])
  user_id Int
  product Product @relation(fields: [product_id],references: [id])
  product_id Int
  created_at DateTime @default(now())
  edited_at DateTime @default(now())
}

model Order {
  id Int @default(autoincrement()) @id
  total Int
  shipping_fee Int @default(0)
  status OrderStatus @default(PENDING)
  user User @relation(fields: [user_id],references: [id])
  user_id Int @unique
  orders SingleOrderItem[]
  payments Payment?
}

model SingleOrderItem {
  id Int @default(autoincrement()) @id
  order Order @relation(fields: [order_id],references: [id])
  order_id Int @unique
  price Int
  amount Int
  product Product @relation(fields: [product_id],references: [id])
  product_id Int
}

model Payment {
  id Int @default(autoincrement()) @id
  order Order @relation(fields: [order_id],references: [id])
  order_id Int @unique
  user User @relation(fields:[user_id],references: [id])
  user_id Int
  payment_time DateTime @default(now())
}

enum OrderStatus {
  PENDING
  FAILED
  PAID
  DELIVERED
  CANCELLED
}

enum Platform {
  GOOGLE
  FACEBOOK
}

enum Role { 
  USER
  ADMIN
  EDITOR
}
